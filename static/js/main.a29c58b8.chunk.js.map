{"version":3,"sources":["img/angelina-christina-1.jpg","img/shepard-fairey-reagan.jpg","audio/AngelinaChristina1.mp3","audio/shepard_fairey_reagan.mp3","img/arts-district-dtla-skyline.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MuralList","react_default","a","createElement","className","Link","to","process","src","angelinaChristina1","shepard_fairey_reagan_img","Home","App_MuralList","MuralCard","props","image","title","location","name","controls","audio","type","App","console","log","BrowserRouter","Route","exact","path","component","render","App_MuralCard","Object","assign","angelinaChristina1_audio","shepard_fairey_reagan_audio","Component","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+HCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gTCSlCC,EAAY,kBAChBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,wCACRN,EAAAC,EAAAC,cAAA,OAAKK,IAAKC,MACVR,EAAAC,EAAAC,cAAA,0BAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,2CACRN,EAAAC,EAAAC,cAAA,OAAKK,IAAKE,MACVT,EAAAC,EAAAC,cAAA,iDAMFQ,EAAO,kBACXV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAEhBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,oBAGAH,EAAAC,EAAAC,cAAA,8CAIFF,EAAAC,EAAAC,cAACS,EAAD,QAIEC,EAAY,SAACC,GAAD,OAChBb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,IAAKM,EAAMC,QAChBd,EAAAC,EAAAC,cAAA,WAAMW,EAAME,OACZf,EAAAC,EAAAC,cAAA,WAAMW,EAAMG,UACZhB,EAAAC,EAAAC,cAAA,sBAAcW,EAAMI,MACpBjB,EAAAC,EAAAC,cAAA,SAAOgB,UAAQ,GACblB,EAAAC,EAAAC,cAAA,UAAQK,IAAKM,EAAMM,MAAOC,KAAK,gBAEjCpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIC,sBAAV,cA8CSe,mLAtCX,OADAC,QAAQC,IAAI,2BAA4BjB,qBAEtCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMrB,qBAA8BsB,UAAWlB,IAC5DV,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,OAAK,EACLC,KAAMrB,uCACNuB,OAAQ,SAAChB,GAAD,OACNb,EAAAC,EAAAC,cAAC4B,EAADC,OAAAC,OAAA,GAAenB,EAAf,CACaI,KAAK,qBACLH,MAAON,IACPO,MAAM,uBACNC,SAAS,mBACTG,MAAOc,UAIxBjC,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,OAAK,EACLC,KAAMrB,0CACNuB,OAAQ,SAAChB,GAAD,OACNb,EAAAC,EAAAC,cAAC4B,EAADC,OAAAC,OAAA,GAAenB,EAAf,CACaI,KAAK,iBACLH,MAAOL,IACPM,MAAM,kCACNC,SAAS,+BACTG,MAAOe,oBA9BlBC,aC5CEC,QACW,cAA7BC,OAAOrB,SAASsB,UAEe,UAA7BD,OAAOrB,SAASsB,UAEhBD,OAAOrB,SAASsB,SAASC,MACvB,2DCZNC,IAASX,OAAO7B,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a29c58b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/angelina-christina-1.e5af3c69.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shepard-fairey-reagan.08826acf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AngelinaChristina1.3e211daf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/shepard_fairey_reagan.356d3b7c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/arts-district-dtla-skyline.b3df6d15.jpg\";","import React, { Component } from 'react';\nimport skyline from './img/arts-district-dtla-skyline.jpg';\nimport angelinaChristina1 from './img/angelina-christina-1.jpg';\nimport angelinaChristina1_audio from './audio/AngelinaChristina1.mp3'\nimport shepard_fairey_reagan_img from './img/shepard-fairey-reagan.jpg';\nimport shepard_fairey_reagan_audio from './audio/shepard_fairey_reagan.mp3';\nimport './App.css';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nconst MuralList = () => (\n  <div>\n    <div className=\"mural-card\">\n      <Link to={process.env.PUBLIC_URL + '/angelina-christina'}>\n        <img src={angelinaChristina1} />\n        <div>Two faces</div>\n      </Link>\n    </div>\n    <div className=\"mural-card\">\n      <Link to={process.env.PUBLIC_URL + '/shepard-fairey-reagan'}>\n        <img src={shepard_fairey_reagan_img} />\n        <div>Legislative Influence For Sale</div>\n      </Link>\n    </div>\n  </div>\n)\n\nconst Home = () => (\n  <div>\n    <header className=\"App-header\">\n      {/*<img src={skyline} className=\"App-logo\" alt=\"logo\" />*/}\n      <h2 className=\"page-title\">\n        Street Art Talks\n      </h2>\n      <p>\n        An audio tour of DTLA street art\n      </p>\n    </header>\n    <MuralList/>\n  </div>\n)\n\nconst MuralCard = (props) => (\n  <div>\n    <img src={props.image}/>\n    <div>{props.title}</div>\n    <div>{props.location}</div>\n    <div>Artist: {props.name}</div>\n    <audio controls>\n      <source src={props.audio} type=\"audio/mpeg\" />\n    </audio>\n    <div>\n      <Link to={process.env.PUBLIC_URL + '/'}>Go back</Link>\n    </div>\n  </div>\n)\n\nclass App extends Component {\n  render() {\n    console.log(\"process.env.PUBLIC_URL: \", process.env.PUBLIC_URL);\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <div>\n            <Route exact path={process.env.PUBLIC_URL + '/'} component={Home}/>\n            <Route\n              exact\n              path={process.env.PUBLIC_URL + '/angelina-christina'}\n              render={(props) => (\n                <MuralCard {...props}\n                             name=\"Angelina Christina\"\n                             image={angelinaChristina1}\n                             title=\"Two faces embracing.\"\n                             location=\"4th and Merrick.\"\n                             audio={angelinaChristina1_audio}\n                />\n              )}\n            />\n            <Route\n              exact\n              path={process.env.PUBLIC_URL + '/shepard-fairey-reagan'}\n              render={(props) => (\n                <MuralCard {...props}\n                             name=\"Shepard Fairey\"\n                             image={shepard_fairey_reagan_img}\n                             title=\"Legislative Influence For Sale.\"\n                             location=\"Alemeda St and Traction Ave.\"\n                             audio={shepard_fairey_reagan_audio}\n                />\n              )}\n            />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}